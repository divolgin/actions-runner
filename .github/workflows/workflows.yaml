on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Full ref of the commit"
        required: true

# Don't change the name of this workflow and don't rename the file. It is referenced in other workflows
name: "! Test workflows"
    
jobs:
    # This workflow can be triggered automatically, and in that case we need to wait for the currently running release to complete.
    # This check is harmless (and likely useful) on manual triggers as well, so there is no need to differentiate.
    wait-for-all-to-complete:
        runs-on: ubuntu-22.04
        outputs:
            next-step: ${{ steps.wait.outputs.next-step }}
        steps:
        - uses: actions/checkout@v4
        - id: wait
          uses: ./.github/actions/gate-production-release-workflow
          with:
            gh_token: ${{ github.token }}
            ref: ${{ inputs.ref }}
            run_id: ${{ github.run_id }}

    check-checks:
        runs-on: ubuntu-22.04
        needs:
        - wait-for-all-to-complete
        steps:
        - uses: actions/github-script@v6
          with:
            script: |
              core.notice(
                `Jobs related to this SHA: ${context.serverUrl}/${context.repo.owner}/${
                    context.repo.repo
                }/actions?query=branch%3Amain+head_sha%3A${{ inputs.ref }}`
                );
                const check_runs = await github.paginate(github.rest.checks.listForRef, {
                  ...context.repo,
                  ref: "${{ inputs.ref }}",
                  per_page: 100,
                });
                const failed = check_runs.filter(
                  function (run) {
                    console.log(run);
                    return true;
                    // !["check-checks", "verify-contract", "generate-vendor-portal-release-notes-pr"].includes(name) &&
                    // (status !== "completed" || !["success", "skipped"].includes(conclusion))
                  } 
                );
                if (failed.length > 0) {
                core.setFailed(
                    `There are failed or incomplete checks:\n${failed
                    .map(({ name, html_url }) => `${name}: ${html_url}`)
                    .join("\n")}`
                );
              }


    approve-schemahero-migrations:
        needs:
        - wait-for-all-to-complete
        runs-on: ubuntu-22.04
        environment: dev
        steps: 
        - run: echo "Approved"

    do-go:
        runs-on: ubuntu-22.04
        needs:
            - approve-schemahero-migrations
        if: needs.wait-for-all-to-complete.outputs.next-step == 'go'
        steps:
            - id: step1
              run: echo "Will continue"

    do-stop:
        if: needs.wait-for-all-to-complete.outputs.next-step == 'stop'
        runs-on: ubuntu-22.04
        needs:
            - approve-schemahero-migrations
        steps:
            - id: step1
              run: echo "Will stop"
